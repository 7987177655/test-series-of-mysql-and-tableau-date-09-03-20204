Q.1 Why Tableau?How does Tableau compare to other BI tools?

Tableau is a popular choice for Business Intelligence (BI) because of its user-friendly interface and powerful data visualization capabilities. Here are some key reasons why Tableau is favored by many:

a) - Ease of Use : Tableau's drag-and-drop interface makes it easy for users to create interactive visualizations and dashboards without needing extensive technical knowledge.

b) - Robust Visualizations : Tableau offers a wide range of visualization options, allowing users to create compelling charts, graphs, maps, and other visualizations to explore and present data effectively.

c) - Data Connectivity : Tableau can connect to a variety of data sources, including databases, spreadsheets, cloud services, and web data connectors, making it easy to access and analyze data from different sources in one place.

d) - Scalability : Tableau is scalable and can handle large datasets, making it suitable for organizations of all sizes, from small businesses to large enterprises.

e) - Community and Support : Tableau has a large and active user community, providing access to resources, forums, and training materials. Tableau also offers customer support and training programs to help users get the most out of the tool.

When comparing Tableau to other BI tools, such as Power BI and QlikView, each tool has its strengths and weaknesses. Power BI, for example, is known for its tight integration with other Microsoft products and its affordability, while QlikView is praised for its associative data model and in-memory processing capabilities.

Ultimately, the choice of BI tool depends on the specific needs and preferences of the organization or individual user. It's a good idea to evaluate multiple tools based on factors such as ease of use, data connectivity, visualization capabilities, and scalability before making a decision.



Q.2 What data sources can you connect to?How do you connect to them?


Tableau can connect to a wide range of data sources, including:

a) - Databases: Tableau can connect to relational databases such as MySQL, PostgreSQL, Oracle, SQL Server, and others, as well as non-relational databases like MongoDB.

b) - Cloud Services: Tableau can connect to cloud-based data sources such as Amazon Redshift, Google BigQuery, Snowflake, and Microsoft Azure SQL Database.

c) - Spreadsheets: Tableau can connect to Microsoft Excel, Google Sheets, and other spreadsheet applications.

d) - Data Warehouses: Tableau can connect to data warehouses such as Amazon Redshift, Google BigQuery, Snowflake, and Microsoft Azure SQL Data Warehouse.

e) - Web Data Connectors: Tableau supports connecting to data from web-based APIs using web data connectors, allowing you to pull in data from sources such as Google Analytics, Salesforce, and others.

f) - Other Sources: Tableau can also connect to other data sources such as PDF files, statistical files (SAS, SPSS), and OData.

Connecting to these data sources is typically done through Tableau's user interface. Here's a general overview of how you would connect to a data source in Tableau:

a) - Open Tableau: Launch Tableau Desktop or Tableau Server and start a new workbook.

b) - Connect to Data: In Tableau, click on the "Connect" pane on the left side of the screen.

c) - Choose Data Source: Select the type of data source you want to connect to (e.g., Excel, SQL Server, Google Analytics).

d) - Connect to Data: Provide the necessary connection details, such as server name, database name, authentication method, etc., and click "Connect" or "Sign in."

e) - Select Data: Once connected, you can select the tables, views, or data sources you want to work with and bring them into Tableau.

f) - Create Visualizations: With your data loaded into Tableau, you can now create visualizations, dashboards, and reports to analyze and visualize your data.


Q.3 -  Q.3 What are the join types in Tableau?

In Tableau, you can combine data from different tables or data sources using joins. Tableau supports several types of joins, each of which specifies how the rows from the joined tables are combined. Here are the common join types in Tableau:

a) - Inner Join: An inner join returns only the rows that have matching values in both tables. Rows with no matching values are excluded from the result set.

b) - Left Join (or Left Outer Join): A left join returns all the rows from the left table and the matched rows from the right table. If there is no match, the result is NULL on the right side.

c) - Right Join (or Right Outer Join): A right join returns all the rows from the right table and the matched rows from the left table. If there is no match, the result is NULL on the left side.

d) - Full Outer Join: A full outer join returns all the rows when there is a match in either the left or right table. If there is no match, the result is NULL on the side with no matching row.

e) - Cross Join (or Cartesian Join): A cross join returns the Cartesian product of the two tables, i.e., all possible combinations of rows from both tables. It does not require any matching columns.


Q.4 - How to join data in Tableau ?

To join data in Tableau, you can follow these steps:

Connect to Data: Start by connecting to the data sources you want to join. You can connect to multiple data sources, including databases, spreadsheets, and other data files.

a) - Drag and Drop: In Tableau, navigate to the "Data Source" tab and locate the tables or data sources you want to join. Drag a field from one table and drop it onto a field in another table to create a join. Tableau will attempt to automatically create the join based on matching field names.

b) - Edit Join: If Tableau does not automatically create the join or if you want to customize the join, you can edit it. Right-click on the join line in the data pane and select "Edit Relationship." Here, you can specify the join criteria, such as the fields to join on and the join type (e.g., inner join, left join, etc.).

c) - Preview Data: After creating or editing the join, you can preview the data to ensure that the join is working as expected. Click on the "Sheet" tab to start building your visualization.

d) - Build Visualizations: With the data joined, you can now build visualizations, dashboards, and reports using the combined data. Drag fields from the data pane onto the view to create visualizations based on the joined data.

e) - Save and Share: Once you have created your visualizations, you can save your work and share it with others. You can save your workbook in Tableau's native .twb or .twbx format or publish it to Tableau Server or Tableau Online for sharing with others


Q.5 What is the difference between joining and blending?

joining is used to combine data from tables that have a relationship, typically using a common field. Joining creates a single unified dataset by merging rows from the joined tables based on the specified join conditions.

Blending, on the other hand, is used to combine data from different data sources or tables that do not have a direct relationship. Blending creates a visual blend of the data, allowing you to compare and analyze data from different sources in the same visualization without merging the data at the row level.


Q.6 - What is the difference between a live and an extract ?

The main difference between a live connection and an extract in Tableau lies in how the data is processed and accessed:

a) - Live Connection: With a live connection, Tableau directly queries the data source each time a user interacts with the visualization (e.g., filters, drill-downs). This means that Tableau always displays the most up-to-date data from the source. However, performance can be affected by the speed and availability of the data source and the complexity of the query.

b) - Extract: An extract is a snapshot of the data that is imported and stored in Tableau's proprietary data format (.tde or .hyper file). When you create an extract, you are essentially creating a local copy of the data in Tableau. Extracts can improve performance, especially for large datasets, because they reduce the need to query the data source repeatedly. Additionally, extracts can be scheduled to refresh at regular intervals to keep the data up to date.

In summary, a live connection provides real-time access to the data source but may suffer from performance issues, while an extract provides better performance by storing a local copy of the data but may not always reflect the most current data. The choice between a live connection and an extract depends on factors such as data size, performance requirements, and data freshness needs.

Q.7 - What is a dimension vs. a measure?

In Tableau, dimensions and measures are two fundamental types of fields used to organize and analyze data:

a) - Dimension: A dimension is a categorical field that provides context and describes the data. Dimensions are typically qualitative or descriptive in nature and are used to segment, filter, or group data. Examples of dimensions include categories like "Product Category," "Region," or "Customer Segment." In Tableau, dimensions are often used to create the rows, columns, and filters in a visualization.

b) - Measure: A measure is a quantitative field that represents a value or metric that can be measured. Measures are typically numeric and are used to perform calculations, aggregations, or comparisons. Examples of measures include fields like "Sales," "Profit," or "Quantity." In Tableau, measures are often used to create the values in a visualization, such as the height of a bar in a bar chart or the size of a bubble in a bubble chart.

In summary, dimensions provide the context for understanding the data, while measures provide the quantitative values that are analyzed and compared. Understanding the difference between dimensions and measures is essential for effectively organizing and analyzing data in Tableau.

Q.8 - What is a discrete vs. a continuous value?

In Tableau, fields can be categorized as either discrete or continuous, based on the type of data they represent:

Discrete: Discrete fields contain finite, distinct values that are typically categorical or qualitative in nature. Discrete fields are used to create headers, rows, columns, and filters in a visualization. Examples of discrete fields include product categories, customer segments, or geographic regions. In Tableau, discrete fields are represented by blue pills.

Continuous: Continuous fields contain a continuous range of values that are typically numeric or temporal in nature. Continuous fields are used to create axes and measures in a visualization. Examples of continuous fields include sales amounts, quantities, or dates. In Tableau, continuous fields are represented by green pills.

In summary, discrete fields represent distinct categories or groups, while continuous fields represent a continuous range of values. Understanding the difference between discrete and continuous fields is important for effectively organizing and visualizing data in Tableau.

Q.9 - What is the Order of Operations?

The Order of Operations in Tableau refers to the sequence in which Tableau performs calculations and applies filters to visualize data accurately. Understanding this order is crucial for creating correct and efficient visualizations. The general Order of Operations in Tableau is as follows:

a ) Data Source Filters: Tableau applies data source filters first, which filter the data before it is loaded into the visualization.

b ) - Extract Filters: If you're using an extract, Tableau applies extract filters next, which filter the data after it has been loaded into the extract.

c ) - Context Filters: Context filters are applied next. Context filters create a temporary subset of data that other filters and calculations will be based on.

d ) - Top N and Conditional Filters: Top N and conditional filters are applied next, limiting the data to the specified number of top or bottom values or based on a specific condition.

e ) - Dimension Filters: Dimension filters are applied next, which filter the data based on specific dimensions, such as product category or region.

f ) - Measure Filters: Measure filters are applied next, which filter the data based on specific measures, such as sales amount or profit margin.

g ) - Table Calculation Filters: Table calculation filters are applied next, which filter the data based on calculations performed within the visualization, such as running totals or moving averages.

h ) - Compute Using for Table Calculations: If you're using table calculations, Tableau determines the compute using settings next, which define how the calculation is applied across the visualization.

i ) - Addressing and Partitioning for Table Calculations: Tableau determines the addressing and partitioning settings for table calculations next, which define how the calculation is computed within the visualization.

j ) - Aggregation: Tableau aggregates the data next, calculating summary values such as sums, averages, or counts based on the level of detail in the visualization.

k ) - Compute Using for Aggregations: Tableau determines the compute using settings for aggregations next, which define how the aggregation is applied across the visualization.

L ) - Visual Encoding: Finally, Tableau applies the visual encoding, such as bars, lines, or colors, based on the aggregated data.

Understanding the Order of Operations helps you create more efficient and accurate visualizations by ensuring that filters and calculations are applied in the correct sequence.


Q.10 - What are parameters, sets, and groups ?

In Tableau, parameters, sets, and groups are all ways to manipulate and organize data for analysis and visualization:

a ) - Parameters: Parameters are dynamic values that allow users to control aspects of the visualization, such as filtering, calculations, or formatting. Parameters can be used to create interactive dashboards where users can adjust the parameters to see different views of the data. For example, a parameter could allow users to select a date range, a category, or a measure to display.

b ) - Sets: Sets are custom fields that group together related dimension members based on a condition or a specific criterion. Sets can be either static or dynamic. Static sets are defined manually by selecting specific members, while dynamic sets are defined by a condition that can change based on the data. Sets can be used for filtering, highlighting, or grouping data in a visualization.

c ) - Groups: Groups are used to combine related dimension members into higher-level categories. Unlike sets, which are based on a condition, groups are created by manually selecting members to include in the group. Groups can be used to simplify visualizations by aggregating similar items or to create new categories for analysis.

In summary, parameters allow users to control aspects of the visualization, sets are used to group dimension members based on a condition, and groups are used to manually group dimension members into higher-level categories. Together, these features provide flexibility and control in analyzing and visualizing data in Tableau.

Q.11 - What is a calculated field ?

In brief, a calculated field in Tableau is a custom field created by performing calculations on existing data fields. It allows users to create new metrics, apply filters, perform custom aggregations, and manipulate data using Tableau's formula language. Calculated fields behave like regular fields and can be used in visualizations, filters, and calculations.

Q.12 - What is a dual axis ?

A dual axis in Tableau allows you to plot two different measures on the same chart with separate axes, enabling you to compare two measures that have different scales or units of measurement. Dual axes are useful for visualizing and comparing data trends that might not be apparent when using a single axis.

Q.13 - What are LOD expressions? 

Level of Detail (LOD) expressions in Tableau allow you to control the granularity of your calculations independently of the visualization level. LOD expressions enable you to compute aggregations that are not at the level of detail of the visualization, providing flexibility in your analysis.

There are three types of LOD expressions in Tableau:

a ) - Fixed: Fixed LOD expressions allow you to compute a value using a specific level of granularity, ignoring the level of detail in the visualization. For example, you can calculate the total sales for each product category, regardless of how the data is aggregated in the visualization.

b ) - Include: Include LOD expressions allow you to compute a value at a specific level of granularity, including the dimension specified in the expression. For example, you can calculate the average sales for each product category, including the product category dimension in the calculation.

c ) - Exclude: Exclude LOD expressions allow you to compute a value at a specific level of granularity, excluding the dimension specified in the expression. For example, you can calculate the average sales for each product category, excluding the product category dimension from the calculation.

LOD expressions provide a powerful way to control the level of detail in your calculations, allowing you to perform complex analyses and create more flexible visualizations in Tableau.


Q. 14 - What are actions?

Actions in Tableau are interactive elements that allow users to interact with visualizations and dashboards. They enable users to perform various actions, such as filtering, highlighting, or navigating to other sheets or dashboards, based on their interactions with the visualization.

There are several types of actions in Tableau:

a ) - Filter Actions: Filter actions allow users to filter data in one visualization based on selections in another visualization. For example, clicking on a data point in a chart could filter a related table to show only the data associated with that point.

b ) - Highlight Actions: Highlight actions allow users to highlight data in one visualization based on selections in another visualization. For example, selecting a region in a map could highlight the corresponding data in a bar chart.

c ) - URL Actions: URL actions allow users to navigate to a specific URL based on their interactions with the visualization. For example, clicking on a data point could open a web page with more information about that data point.

d ) - Go to Sheet Actions: Go to Sheet actions allow users to navigate to another sheet or dashboard based on their interactions with the visualization. For example, clicking on a data point could take the user to a detailed dashboard about that data point.

e ) - Dashboard Actions: Dashboard actions allow users to perform actions across multiple visualizations within a dashboard. For example, selecting a filter in one visualization could update multiple visualizations in the dashboard.

Actions in Tableau enhance the interactivity and usability of visualizations and dashboards, allowing users to explore and analyze data more effectively.


Q.15 How do you restrict access to the data?


Restricting access to data in Tableau can be achieved through several methods, depending on the level of security and control required:

a ) - Data Source Filters: Apply data source filters to limit the data accessible to Tableau users. These filters are applied at the data source level and restrict the data that can be queried by Tableau.

b ) - Row-Level Security: Implement row-level security to restrict access to specific rows of data based on user roles or permissions. Row-level security can be managed using database views, user filters, or Tableau's built-in security features.

c ) - User Filters: Use user filters to restrict the data visible to individual users or groups. User filters can be based on user attributes or roles and are applied at the dashboard or worksheet level.

d ) - Data Extracts: Create data extracts with only the data that users should have access to. Data extracts can be filtered and aggregated to include only the necessary data for analysis.

e ) - Permissions and Roles: Use Tableau Server or Tableau Online's permissions and roles features to control who has access to specific workbooks, datasources, or views. Assigning users to different roles can restrict their access to certain data or features.

f ) - Data Encryption: Ensure that sensitive data is encrypted both in transit and at rest to protect it from unauthorized access.

g ) - Database Security: Implement database-level security measures, such as database views, stored procedures, or database roles, to restrict access to data at the database level.

By using a combination of these methods, you can effectively restrict access to data in Tableau and ensure that users only have access to the data they are authorized to see.


Q.16 How do you increase the performance of a slow workbook ? 


To increase the performance of a slow workbook in Tableau, you can take several steps to optimize the workbook and improve its responsiveness:

1 . Data Source Optimization:

a )  - Use extracts: Create data extracts to improve performance, especially for large datasets.

b ) - Optimize queries: Ensure that your data source queries are optimized for performance, including using filters and aggregations where possible.
Data Source Filters:

2 .  Apply data source filters: Use data source filters to limit the amount of data loaded into Tableau, reducing the workload on the visualization.
Use Aggregates:

3 . Use aggregated data: Pre-aggregate data where possible to reduce the amount of data processed by Tableau.

4 . Reduce Complexity:

a ) - Simplify calculations: Simplify complex calculations and use calculated fields only when necessary.

b ) - Limit the number of marks: Reduce the number of marks displayed in the visualization to improve performance, especially for large datasets.

5. - Dashboard and Worksheet Optimization:

a ) - Reduce the number of sheets: Limit the number of sheets in a dashboard to reduce rendering time.

b ) - Optimize filters: Use context filters and filter actions efficiently to reduce the amount of data processed.

c ) - Limit quick filters: Limit the use of quick filters, especially with large datasets.

6 . Use Extracts for Filters and Calculations:

Use extracts for filters and calculations: Create extracts for filters and calculations to improve performance.

7 . Hardware and Server Optimization:

a ) - Increase hardware resources: Increase the hardware resources available to Tableau Server, such as CPU, memory, and disk space.

b ) - Optimize server settings: Adjust server settings, such as caching and query timeouts, to improve performance.

8 . Tableau Performance Recording:

Use Tableau's Performance Recording feature to identify performance bottlenecks and optimize your workbook accordingly.

By implementing these optimization techniques, you can improve the performance of your Tableau workbook and provide a faster and more responsive experience for users.


Q. 17 -  Build a chart showing the top five and bottom five sales by customer?


o build a chart showing the top five and bottom five sales by customer, you can use a combined bar chart. Here's how you can do it:

a ) . Create a Calculated Field for Total Sales: If you don't already have a calculated field for total sales, create one by summing the sales for each customer. You can do this by right-clicking on the data pane and selecting "Create Calculated Field." Enter a name for the calculated field (e.g., "Total Sales") and the formula SUM([Sales]).

b ) - Create a Rank Calculated Field: Create a calculated field to rank the customers based on their total sales. You can do this by right-clicking on the data pane and selecting "Create Calculated Field." Enter a name for the calculated field (e.g., "Rank") and the formula RANK_UNIQUE(SUM([Sales]), 'desc') to rank customers in descending order based on total sales.

c ) - Create a Combined Bar Chart:

1 . Drag the "Customer Name" dimension to the Rows shelf.

2 . Drag the "Total Sales" calculated field to the Columns shelf.

3 . Right-click on the "Total Sales" axis and select "Add Reference Line." Choose "Per-Pane" as the scope and set the value to 5. This will create a line 

4 . separating the top five and bottom five customers.

5 . Right-click on the "Rank" calculated field in the data pane and select "Show Filter." Select the top five and bottom five ranks.

6 . Format the chart as desired.

This chart will display the top five and bottom five customers based on their total sales, with a line separating the two groups. Adjust the formatting and 

layout as needed to fit your requirements.


Q.18 Find the state with the lowest profit ratio ?


To find the state with the lowest profit ratio, you can use a calculated field to calculate the profit ratio for each state and then use a table calculation 

to find the state with the lowest profit ratio. Here's how you can do it:

1 . Create a Calculated Field for Profit Ratio:

Right-click on the data pane and select "Create Calculated Field."

Enter a name for the calculated field (e.g., "Profit Ratio") and the formula SUM([Profit]) / SUM([Sales]) to calculate the profit ratio.

2 . Create a Table Calculation for Rank:

Drag the "State" dimension to the Rows shelf.

Drag the "Profit Ratio" calculated field to the Columns shelf.

Right-click on the "Profit Ratio" pill on the Columns shelf and select "Compute Using" > "State."

Drag the "Profit Ratio" pill again to the Rows shelf to duplicate it.

Right-click on the duplicated "Profit Ratio" pill on the Rows shelf and select "Edit Table Calculation."

In the Table Calculation dialog, select "Rank" as the calculation type and choose "Ascending" as the order.

Click OK to apply the table calculation.

3 . Filter to the State with the Lowest Profit Ratio:

Drag the "State" dimension from the Rows shelf to the Filters shelf.

In the filter dialog, select "Compute Using" > "Advanced."

In the advanced filter dialog, select "Rank" as the field, "Minimum" as the condition, and enter "1" as the value.

Click OK to apply the filter.

This will filter the view to show only the state with the lowest profit ratio. You can then display the state name and profit ratio in a text table or any 

other visualization as needed.




